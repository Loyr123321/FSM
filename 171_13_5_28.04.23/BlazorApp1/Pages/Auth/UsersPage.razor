@page "/users"
@using BlazorApp1.Auth;
@using BlazorApp1.Models.Validation;
@using BlazorApp1.Models;
@using BlazorApp1.Services;
@using BlazorApp1.Utils;
@using FluentValidation;
@using Radzen;
@using static BlazorApp1.Utils.Utils;
@attribute [Authorize(Policy = "RequireRole")]
@*@attribute [Authorize(Roles = "Admin")]*@

@inject ISnackbar Snackbar
@inject MailService mailService
@inject Services.UserService userService
@inject NavigationManager navigationManager

<link rel="stylesheet" href="_content/Radzen.Blazor/css/material-base.css">

<div class="row">

  <div class="col-12">
        <div class="row page_header align-center">
            <div class="col-sm-1 my_fc">
                <h1>Пользователи</h1>
            </div>

            @if(authenticationStateTask.Result?.User?.Claims?.Where(t => t.Type == System.Security.Claims.ClaimTypes.Role)?.FirstOrDefault(x => x.Value == ROLES_ENUM.Admin.ToString())?.Value != null)
            {
                <div class="col-1 my_fc">
                    <MudButton Class="button_add_to_data" OnClick="@(() => navigationManager.NavigateTo("/sendregister"))">
                        <MudText Class="button_add_to_data_text">Новый пользователь</MudText>
                    </MudButton>
                </div>
            }
            
        </div>
    </div>

    <div class="col-12">

        <RadzenDataGrid Data="@users" TItem="User"
                        Density="Density.Compact"
                        GridLines="DataGridGridLines.Both"
                        AllowAlternatingRows="false"
                        PagerHorizontalAlign="HorizontalAlign.Right"
                        AllowPaging="true"
                        PageNumbersCount="3"
                        PageSize="25"
                        PageSizeOptions="new int[] { 25, 50, 100, 250 }"
                        ShowPagingSummary="true"
                        FilterMode="FilterMode.Simple"
                        LogicalFilterOperator="LogicalFilterOperator.Or"
                        AllowFiltering="true"
                        AllowColumnPicking="false"
                        ColumnsShowingText="столбцов выбрано"
                        ColumnsText="Столбцы"
                        AllowSorting="true"
                        Style="height:calc(100vh - 200px);border-radius: 10px!important;border: 1px solid #D9D9D9!important;"
                        ColumnWidth="300px"
                        AllowColumnResize="true"
                        PagingSummaryFormat=@pagingSummaryFormat
                        PageSizeText="Показывать элементов на странице"
                        RowRender="RowRender"
                        RowClick="RowClick"
                        EmptyText="Пользователи не найдены"
                        class="gridTable"
                        @ref="grid">
            <Columns>
                <!---->

                <RadzenDataGridColumn TItem="User" Title="Пользователь" HeaderCssClass="header_table" Sortable="true" SortProperty="LastName" Filterable="true">
                    <FilterTemplate>
                        <RadzenTextBox @oninput="@(e=> OnFilterChange(e, ref filterName))" Style="width:100%;" Class="w-100" />
                    </FilterTemplate>

                    <Template Context="context">
                        @if (!string.IsNullOrEmpty(context.GetFullName()))
                        {
                            <div class="table_font" style="white-space:pre-wrap">@context.GetFullName()</div>
                        }
                    </Template>
                </RadzenDataGridColumn>

                <RadzenDataGridColumn TItem="User" Title="Роли" Sortable="false" SortProperty="LastName" Filterable="true" HeaderCssClass="header_table">
                    <FilterTemplate>
                        <RadzenTextBox @oninput="@(e=> @OnFilterChange(e, ref filterRole))" Style="width:100%;" Class="w-100" />
                    </FilterTemplate>

                    <Template Context="context">
                        @if (context.Roles != null && context.Roles.Count > 0)
                        {
                            foreach (var role in context.Roles)
                            {
                                <div class="table_font" style="white-space:pre-wrap">@role</div>
                            }
                        }
                    </Template>
                </RadzenDataGridColumn>



            </Columns>
        </RadzenDataGrid>
    </div>
</div>

@code
{
    public void Debug()
    {
    }
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    protected override async Task OnInitializedAsync()
    {
        GetUsers();
    }

    public List<User> allUsers = new List<User>();
    public List<User> users = new List<User>();
    private void GetUsers()
    {
        allUsers = userService.GetAll().OrderBy(x => x.LastName).ToList();
        users = userService.GetAll().OrderBy(x => x.LastName).ToList();
    }

    private void OnFilterChange(ChangeEventArgs e, ref string myref)
    {

        //filterName = e.Value.ToString();
        if (e != null)
            myref = e.Value.ToString();
        FilterRecords(null);
    }
    private string? filterName;
    private string? filterRole;
    private void FilterRecords(object value)
    {
        users.Clear();
        users.AddRange(allUsers);

        //Фильтрация по имени
        if (!string.IsNullOrEmpty(filterName))
        {
            users = users.Where(x => !string.IsNullOrEmpty(x.GetFullName()) && x.GetFullName().ToLower().Contains(filterName.ToLower())).ToList();
        }
        
        //Фильтрация по роли
        if (!string.IsNullOrEmpty(filterRole))
        {
            users = users.Where(e => e.Roles != null && e.Roles.Any(r => r.ToLower().Contains(filterRole.ToLower()))).ToList();
        }

        users = users.ToList(); //Update Table if filters == null
    }
    
    private void ShowNotification(MudBlazor.Severity severity, string text)
    {
        Snackbar.Clear();
        Snackbar.Add(text, severity);
    }
    private RadzenDataGrid<User> grid;
    private bool _processing = false;
    private string pagingSummaryFormat = "Страница {0} из {1} (всего {2} записи/-ей)";
    private void RowRender(RowRenderEventArgs<User> args)
    {
        //args.Attributes.Add("class", "STATUS_" + args.Data.OrderStatus.StatusCode);
        args.Attributes.Add("class", "hover_on_row");
    }
    private void RowClick(DataGridRowMouseEventArgs<User> args)
    {
        var id = args.Data.Id;
        navigationManager.NavigateTo($"/changeuser?id={id}");
    }
}
